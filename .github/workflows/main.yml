name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CSV_URL: "MLProject/healthcare-dataset-stroke_preprocessing.csv"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Clone repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup Python
      - name: Setup Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r MLProject/requirements.txt
          pip install mlflow

      # Step 4: Jalankan MLflow Project
      - name: Run MLflow project
        run: |
          mlflow run MLProject --env-manager=local -P data_path="MLProject/healthcare-dataset-stroke_preprocessing.csv"

      # Step 5: Dapatkan RUN_ID terbaru
      - name: Get latest RUN_ID
        id: get_run_id
        run: |
          RUN_ID=$(ls -t mlruns/0 | head -n1)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest RUN_ID: $RUN_ID"

      # Step 6: Upload artifact model ke GitHub
      - name: Upload MLflow model artifact
        uses: actions/upload-artifact@v4
        with:
          name: stroke-model
          path: mlruns/0/${{ env.RUN_ID }}/artifacts/model

      # Step 7: Commit mlruns ke repo GitHub
      - name: Save mlruns to repository
        run: |
          git config --global user.name "${{ secrets.USERNAME }}"
          git config --global user.email "${{ secrets.EMAIL }}"
          git pull origin main
          git add mlruns/
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Add mlruns/"
            git push origin main
          fi

      # Step 8: Build Docker image dari model
      - name: Build Docker image from model
        run: |
          mlflow models build-docker -m mlruns/0/${{ env.RUN_ID }}/artifacts/model -n stroke-predictor

      # Step 9: Push Docker image ke Docker Hub
      - name: Push Docker image to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker tag stroke-predictor $DOCKERHUB_USERNAME/stroke-predictor:latest
          docker push $DOCKERHUB_USERNAME/stroke-predictor:latest
